// The write effect allows a function to write elements to an output. The output 
// is defined by the handler so functions will work with any output. Writing can
// perform IO such as logging to standard out, but can also be pure such as
// collecting in a list.
class Write(elem)

def Write.toString() "Write(" + elem.toString() + ")"

def write(elem) do Write(elem)

// Handles the write effect by logging each element.
def writeLog(lazy f)
    handle (f()) (effect) match (effect) {
        Write(elem) {
            log(elem)
            writeLog { resume({}) }
        }
        Any() {
            let cont do effect
            writeLog { resume(cont) }
        }
    }

// Handles the write effect by writing to a list.
def writeList(list, lazy f)
    handle ({ f() list }) (effect) match (effect) {
        Write(elem) elem : writeList(list) { resume({}) }
        Any() {
            let cont do effect
            writeList(list) { resume(cont) }
        }
    }
